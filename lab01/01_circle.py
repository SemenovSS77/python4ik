# -*- coding: utf-8 -*-

# Есть значение радиуса круга
radius = 42

# Выведите на консоль значение площади этого круга с точностю до 4-х знаков после запятой
# подсказки:
#       формулу можно подсмотреть в интернете (pi * R^2),
#       пи возьмите равным 3.1415926
#       точность указывается в функции round()
# TODO здесь ваш код

pi = 3.1415926
pl = pi * radius ** 2
fpl = round(pl, 4)
print(fpl)

# Далее, пусть есть координаты точки
point_1 = (23, 34)
# где 23 - координата х, 34 - координата у

# Если точка point лежит внутри того самого круга [центр в начале координат (0, 0), radius = 42],
# то выведите на консоль True, Или False, если точка лежит вовне круга.
# подсказки:
#       нужно определить расстояние от этой точки до начала координат (0, 0)
#       формула так же есть в интернете ( (x ** 2 + y ** 2) ** 0.5 )
#       квадратный корень - это возведение в степень 0.5
#       операции сравнения дают булевы константы True и False
# TODO здесь ваш код

x1 = point_1[0]
y1 = point_1[1]

def in_radius(x, y, radius):
    dist = (x ** 2 + y ** 2) ** 0.5
    return dist <= radius
print(in_radius(x1, y1, radius))

# Аналогично для другой точки
point_2 = (30, 30)
# Если точка point_2 лежит внутри круга (radius = 42), то выведите на консоль True,
# Или False, если точка лежит вовне круга.
# TODO здесь ваш код

x2 = point_2[0]
y2 = point_2[1]
print(in_radius(x2, y2, radius))

# Пример вывода на консоль:
#
# 77777.7777
# False
# False